#https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html
#https://www.elastic.co/guide/en/elasticsearch/reference/current/configuring-tls-docker.html
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_elastic_es01
    environment:
      - node.name=es01
      - cluster.name=${ES_CLUSTER_NAME}
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=${ES_JAVA_OPTS}
      - xpack.license.self_generated.type=${ES_XPACK_LICENCE}
      - xpack.security.enabled=true
      - xpack.security.authc.api_key.enabled=true
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD 
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.http.ssl.key=$CERTS_DIR/es/es.key
      - xpack.security.http.ssl.certificate=$CERTS_DIR/es/es.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate 
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/es/es.key
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/es/es.crt
      #- xpack.security.autoconfiguration.enabled= false
      #- xpack.security.enrollment.enabled= false

    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic_data01:/usr/share/elasticsearch/data
      - ./certs:$CERTS_DIR
    ports:
      - 127.0.0.1:9200:9200
    networks:
      - elastic
    restart: unless-stopped
    healthcheck:
      test: curl --cacert $CERTS_DIR/ca/ca.crt -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_elastic_es02
    environment:
      - node.name=es02
      - cluster.name=${ES_CLUSTER_NAME}
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=${ES_JAVA_OPTS}
      - xpack.license.self_generated.type=${ES_XPACK_LICENCE}
      - xpack.security.enabled=true
      - xpack.security.authc.api_key.enabled=true
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD 
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.http.ssl.key=$CERTS_DIR/es/es.key
      - xpack.security.http.ssl.certificate=$CERTS_DIR/es/es.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate 
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/es/es.key
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/es/es.crt
      #- xpack.security.autoconfiguration.enabled= false
      #- xpack.security.enrollment.enabled= false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic_data02:/usr/share/elasticsearch/data
      - ./certs:$CERTS_DIR
    networks:
      - elastic
    restart: unless-stopped

  # wait_until_ready:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}
  #   command: /usr/bin/true
  #   depends_on: {"es01": {"condition": "service_healthy"}}

  kibana:
    image: docker.elastic.co/kibana/kibana:${ES_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}_elastic_kibana
    environment:
      SERVER_NAME: kibana
      SERVER_HOST: 0.0.0.0
      ELASTICSEARCH_HOSTS: '["https://es01:9200"]'
      ELASTICSEARCH_SSL_VERIFICATIONMODE: none
      ELASTICSEARCH_USERNAME: $KIBANA_ELASTIC_USER 
      ELASTICSEARCH_PASSWORD: $KIBANA_ELASTIC_PASSWORD 
      SERVER_SSL_ENABLED: true
      SERVER_SSL_CERTIFICATE: $KIBANA_CERTS_DIR/kibana/kibana.crt
      SERVER_SSL_KEY: $KIBANA_CERTS_DIR/kibana/kibana.key
      ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES: $KIBANA_CERTS_DIR/es/es.crt
      MONITORING_UI_CONTAINER_ELASTICSEARCH_ENABLED: true
      XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: f53265ca36fdc9cb21b5e65a2a591262
      XPACK_REPORTING_ENCRYPTIONKEY: 9c08493eb773216c6fd1a74adfe9291e
      XPACK_SECURITY_ENCRYPTIONKEY: 573d98e8690ab215f7e2fa82575e4f3c
    volumes:
      - ./certs:$KIBANA_CERTS_DIR
    ports:
      - "5601:5601"
    networks:
      - elastic
    depends_on:
      - es01
    restart: unless-stopped

volumes:
  elastic_data01:
    driver: local
  elastic_data02:
    driver: local
  elastic_data03:
    driver: local

networks:
  elastic:
    name: ${COMPOSE_PROJECT_NAME}_elastic
    driver: bridge
